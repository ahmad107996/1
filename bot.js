const Discord = require("discord.js");
const client = new Discord.Client();
const fs = require("fs");
const moment = require("moment");

var prefix = "#";
client.on('ready', () => {
   console.log(`----------------`);
      console.log(`Desert Bot- Script By : EX Clan`);
        console.log(`----------------`);
      console.log(`ON ${client.guilds.size} Servers '     Script By : EX Clan ' `);
    console.log(`----------------`);
  console.log(`Logged in as ${client.user.tag}!`);
client.user.setGame(`#help`,"https://www.twitch.tv/ahmad107996")
client.user.setStatus("dnd")
});

client.on('message', async msg => {
    var prefix = ".";
    var user = msg.author;
            var a = msg.guild.roles.find("name", 'League Of Legends');
        if(!a){
        a = await msg.guild.createRole({
          name: "League Of Legends",
          color: "#ffffff",
          permissions:[]
        })
       
        }
        var m = msg.guild.roles.find("name", 'Minecraft');
    if(!m){
        m =  await msg.guild.createRole({
          name: "Minecraft",
          color: "#ffffff",
          permissions:[]
        })
        }
        var f = msg.guild.roles.find("name", 'Fortnite');
        if(!f){
        f =  await msg.guild.createRole({
          name: "Fortnite",
          color: "#ffffff",
          permissions:[]
        })
        }

        var c = msg.guild.roles.find("name", 'Cs GO');
        if(!f){
        c =  await msg.guild.createRole({
          name: "Cs GO",
          color: "#ffffff",
          permissions:[]
        })
        }

        var black = msg.guild.roles.find("name", 'roblox');
    if(!black){
        black =  await msg.guild.createRole({
          name: "roblox",
          color: "#ffffff",
          permissions:[]
        })
        }
 
        if (msg.content.startsWith(prefix +'addmerole')) {
 
        if(!msg.channel.guild) return msg.channel.send('**ูุฐุง ุงูุฃูุฑ ููุท ููุณูุฑูุฑุงุช**').then(m => m.delete(5000));
msg.channel.send(`ูุฑุญู ุงุฎุชูุงุฑ ุฑุชุจุฉ ุงููุนุจุฉ ุงูุฐู ุชุฑูุฏูุง \n1- ูุนุจุฉ League Of Legends <:roblox:535466102331801620> \n2- ูุนุจุฉ Minecraft 535459149908017153 \n3- ูุนุจุฉ Fortnite 535459149220413441 \n4- ูุนุจุฉ Cs GO  535465045245558785\n5-ูุนุจุฉ roblox 535466102331801620  \n6- ุงูุบุงุก โ \n7- **ูุฏูู60 ุซุงููุฉ ููุงุฎุชูุงุฑ **\n<@${msg.author.id}>`).then(res => {    
     res.react('535459149723598878').then(r=>{    
     res.react('535459149908017153').then(r=>{
     res.react('535459149220413441').then(r=>{
     res.react('535465045245558785').then(r=>{
     res.react('535466102331801620').then(r=>{     
     res.react('โ').then(r=>{
 
    let aaa = (reaction, user) => reaction.emoji.name === '535459149723598878' && user.id === msg.author.id;    
    let mmm = (reaction, user) => reaction.emoji.name === '535459149908017153' && user.id === msg.author.id;
    let fff = (reaction, user) => reaction.emoji.name === '535459149220413441' && user.id === msg.author.id;
    let bbb = (reaction, user) => reaction.emoji.name === '535465045245558785' && user.id === msg.author.id;
    let bbbb = (reaction, user) => reaction.emoji.name === '535466102331801620' && user.id === msg.author.id;
    let ccc = (reaction, user) => reaction.emoji.name === 'โ' && user.id === msg.author.id;
 
    let aa = res.createReactionCollector(aaa, { maxMatches:1 , time: 20000 , });
    let mm = res.createReactionCollector(mmm, { maxMatches:1 , time: 20000 , });
    let ff = res.createReactionCollector(fff, { maxMatches:1 , time: 20000 , });
    let bb = res.createReactionCollector(bbb, { maxMatches:1 , time: 20000 , });
    let bl = res.createReactionCollector(bbbb,{ maxMatches:1 , time: 20000 , });
    let cc = res.createReactionCollector(ccc, { maxMatches:1 , time: 20000 , });
 
aa.on("collect", r => {
    msg.guild.member(user.id).addRole(a);
    msg.channel.send('`ุชู ุงุนุทุงุฆู ุฑุชุจุฉ ููุนุจุฉ League Of Legends`');
    msg.delete();
    })
mm.on("collect", r => {
    msg.guild.member(user.id).addRole(m);
    msg.channel.send('`ุชู ุงุนุทุงุฆู ุฑุชุจุฉ ููุนุจุฉ Mincraft `');
    msg.delete();
})

ff.on("collect", r => {
    msg.guild.member(user.id).addRole(f);
    msg.channel.send('`ุชู ุงุนุทุงุฆู ุฑุชุจุฉ ููุนุจุฉ Fortnite `');
    msg.delete();
})
bb.on("collect", r => {
    msg.guild.member(user.id).addRole(c);
    msg.channel.send('`ุชู ุงุนุทุงุฆู ุฑุชุจุฉ ููุนุจุฉ Cs GO `');
    msg.delete();
})
bl.on("collect", r => {
    msg.guild.member(user.id).addRole(black);
    msg.channel.send('`ุชู ุงุนุทุงุฆู ุฑุชุจุฉ ููุนุจุฉ roblox `');
    msg.delete();
})
cc.on("collect", r => {
    msg.delete();
})
     })
     })
     })
     })
     })
     })
     })
     }
     });



const devs = ["348953140315291649"];
const adminprefix = ["#"];
client.on('message', message => {
    var argresult = message.content.split(` `).slice(1).join(' ');
      if (!devs.includes(message.author.id)) return;
      
  if (message.content.startsWith('#ply')) {
    client.user.setGame(argresult);
      message.channel.send(`**โ   ${argresult}**`)
  } else 
     if (message.content === ("#leave")) {
    message.guild.leave();        
  } else  
  if (message.content.startsWith('#wt')) {
  client.user.setActivity(argresult, {type:'WATCHING'});
      message.channel.send(`**โ   ${argresult}**`)
  } else 
  if (message.content.startsWith('#mils')) {
  client.user.setActivity(argresult , {type:'LISTENING'});
      message.channel.send(`**โ   ${argresult}**`)
  } else 
  if (message.content.startsWith('#st')) {
    client.user.setGame(argresult, "https://www.twitch.tv/idk");
      message.channel.send(`**โ**`)
  }
  if (message.content.startsWith('#setname')) {
  client.user.setUsername(argresult).then
      message.channel.send(`Changing The Name To ..**${argresult}** `)
} else
if (message.content.startsWith('#setavatar')) {
  client.user.setAvatar(argresult);
    message.channel.send(`Changing The Avatar To :**${argresult}** `);
}
});

client.on("message", message => {
            if(message.content.startsWith("#ุชูุฏูู")) {
        if(!message.channel.guild) return;
                if(message.author.bot) return;
        let channel = message.guild.channels.find("name", "ุงูุชูุฏููุงุช")
            if(!channel) return message.reply("**ูุงูุดุงุก ุฑูู ุงูุชูุฏููุงุช #room1 ูู ูุถูู ุงูุชุจ ุงูุงูุฑ**")
            if(channel) {
            message.channel.send( message.member + ', **:timer:**').then( (m) =>{
              m.edit( message.member + ', **ุงุณูู ุงูุญูููู  โ**' )
              m.channel.awaitMessages( m1 => m1.author == message.author,{ maxMatches: 1, time: 60*1000 } ).then ( (m1) => {
                  m1 = m1.first();
                  var name = m1.content;
                  m1.delete();
                  m.edit(message.member + ', **:timer:**').then( (m) =>{
                      m.edit( message.member + ', **ุนูุฏู ูุงู ุณูุฉ ๐**' )
                      setTimeout(() => {
                        m.delete()
                      }, 10000);
                      m.channel.awaitMessages( m2 => m2.author == message.author,{ maxMatches: 1, time: 60*1000 } ).then ( (m2) => {
                          m2 = m2.first();
                          var age = m2.content;
                          m2.delete()
                          message.channel.send( message.member + ', **:timer:**').then( (m) =>{
                            m.edit( message.member + ', **ูู ุชุชูุงุนู ูู ุงูุฑุชุจู๐**' )
                            setTimeout(() => {
                              m.delete()
                            }, 10000);
                            m.channel.awaitMessages( m1 => m1.author == message.author,{ maxMatches: 1, time: 60*1000 } ).then ( (m3) => {
                                m3 = m3.first();
                                var ask = m3.content;
                                m3.delete();
                                message.channel.send( message.member + ', **:timer:**').then( (m) =>{
                                  m.edit( message.member + ', **ูู ุณุชุญุชุฑู ุงูููุงููู ุ ๐**' )
                                  setTimeout(() => {
                                    m.delete()
                                  }, 10000);
                                  m.channel.awaitMessages( m1 => m1.author == message.author,{ maxMatches: 1, time: 60*1000 } ).then ( (m4) => {
                                      m4 = m4.first();
                                      var ask2 = m4.content;
                                      m4.delete();
                                      message.channel.send( message.member + ', **:timer:**').then( (m) =>{
                                        m.edit( message.member + ', **ููุงุฐุง ูุฌุจ ุนูููุง ุงู ููุจูู ุ ุงุนุทูุง ุณุจุจุงู ูุฌููุงู ๐ค**' )
                                        m.channel.awaitMessages( m1 => m1.author == message.author,{ maxMatches: 1, time: 60*1000 } ).then ( (m5) => {
                                            m5 = m5.first();
                                            var ask3 = m5.content;
                                            m5.delete();
                      m.edit(message.member + ', **....ุฌุงุฑู ุฌูุน ุงูุจูุงูุงุช**').then( (mtime)=>{
                        setTimeout(() => {
                          let embed = new Discord.RichEmbed()
                        .setColor('RANDOM')
                        .setTitle(`**ุชูุฏูู ุนูู ุฑุชุจู** [__**${message.guild.name}**__]`)
                        .addField('**`ุงูุงุณู`**', `${name}` , true)
                        .addField('**`ุงูุนูุฑ`**', `${age}` , true)
                        .addField('**`ูู ุณูุชูุงุนู ุ`**',`${ask}`)
                        .addField('**`ูู ุณูุญุชุฑู ุงูููุงููู ุ`**',`${ask2}`)
                        .addField('**`ููุงุฐุง ูุฌุจ ุนูููุง ูุจููู ุ`**',`${ask3}`)
                        .setFooter(message.author.username,'https://images-ext-2.discordapp.net/external/JpyzxW2wMRG2874gSTdNTpC_q9AHl8x8V4SMmtRtlVk/https/orcid.org/sites/default/files/files/ID_symbol_B-W_128x128.gif')
                        channel.send(embed)
                        }, 2500);
                        setTimeout(() => {
                          mtime.delete()
                        }, 3000);
 
                  })
                })
                })
              })
            })
          })
        })
        })
              })
          })
        })
    }
}
        });

        client.on('message', message=>{
            if(message.content.startsWith("#room1")) {
            if(!message.channel.guild) return;
                if(message.author.bot) return;
                if(!message.member.hasPermission('ADMINISTRATOR')) return message.reply("**ุชุญุชุงุฌ ุงูู `MANAGE_CHANNELS`**");
                message.guild.createChannel("ุงูุชูุฏููุงุช", "text").then(c =>{
                    c.overwritePermissions(message.guild.id, {
                        SEND_MESSAGES: false
 
                          })
                })
    message.channel.send("**โ ุชู ุงูุดุงุก ุฑูู ุงูุชูุฏููุงุช ุจูุฌุงุญ**")
            }
            })
    client.on('message',async message => {
  let mention = message.mentions.members.first();
  let role = message.content.split(" ").slice(2).join(" ");
  let mySupport = message.guild.roles.find('name',role);
  if(message.content.startsWith("#ูุจูู")) {
    let acRoom = message.guild.channels.find('name', 'ุงููุจูู-ุงูุฑูุถ');
    if(!acRoom) return message.reply("!!setac ูู ูุถูู ุงูุดุงุก ุฑูู **ุงููุจูู-ุงู๏ฟฝ๏ฟฝูุถ** ุงู ุงูุชุจ ุงูุงูุฑ");
    if(acRoom) {
    if(!message.guild.member(message.author).hasPermission("MANAGE_ROLES")) return;
    if(!mention) return message.reply('ููุดู ุดุฎุต');
    if(!role) return message.reply('ุงุฏุฎู ุงุณู ุฑุชุจุฉ');
    if(!mySupport) return message.reply('ูุฐู ุงูุฑุชุจุฉ ุบูุฑ ููุฌูุฏุฉ');
    if(mention.roles.has(mySupport)) return message.reply('ูุฐุง ุงูุดุฎุต ูุนู ุงูุฑุชุจุฉ ูุณุจูุง');
 
    mention.addRole(mySupport).then(() => {
      acRoom.send(`**[ ${mySupport} ] ูุงุนุทุงุฆู ุฑุชุจุฉ ${mention} ุชู ุจูุฌุงุญ ูุจููู**`);
    });
  }
}
});
client.on('message',async message => {
  let mention = message.mentions.members.first();
  if(message.content.startsWith("#ุฑูุถ")) {
  if(!message.channel.guild) return;
  let acRoom = message.guild.channels.find('name', 'ุงููุจูู-ุงูุฑูุถ');
  if(!acRoom) return message.reply("!!setac ูู ูุถูู ุงูุดุงุก ุฑูู **ุงููุจูู-ุงูุฑูุถ** ุงู ุงูุชุจ ุงูุงูุฑ");
  if(!message.guild.member(message.author).hasPermission("MANAGE_ROLES")) return;
  if(!mention) return message.reply("ููุดู ุดุฎุต");
 
  acRoom.send(`**${mention} ุชู ุฑูุถู ููุงุณู**`)
  }
});
          client.on('message', message=>{
            if(message.content.startsWith("#room2")) {
         if(!message.channel.guild) return;
                if(message.author.bot) return;
                if(!message.member.hasPermission('ADMINISTRATOR')) return message.reply("**ุชุญุชุงุฌ ุงูู `MANAGE_CHANNELS`**");
                message.guild.createChannel("ุงููุจูู-ุงูุฑูุถ", "text").then(c =>{
                    c.overwritePermissions(message.guild.id, {
                        SEND_MESSAGES: false
 
                          })
                })
    message.channel.send("**โ ุชู ุงูุดุงุก ุฑูู ุงููุจูู ูุงูุฑูุถ ุจูุฌุงุญ**")
            }
})



client.on('message', message => {
if(!message.channel.guild) return;
if(message.content.startsWith(prefix + 'move')) {
 if (message.member.hasPermission("MOVE_MEMBERS")) {
 if (message.mentions.users.size === 0) {
 return message.channel.send("``ูุงุณุชุฎุฏุงู ุงูุฃูุฑ ุงูุชุจ ูุฐู ุงูุฃูุฑ : " +prefix+ "move [USER]``")
}
if (message.member.voiceChannel != null) {
 if (message.mentions.members.first().voiceChannel != null) {
 var authorchannel = message.member.voiceChannelID;
 var usermentioned = message.mentions.members.first().id;
var embed = new Discord.RichEmbed()
 .setTitle("Succes!")
 .setColor("#000000")
 .setDescription(`ููุฏ ููุช ุจุณุญุจ <@${usermentioned}> ุงูู ุงูุฑูู ุงูุตูุชู ุงูุฎุงุต ุจูโ `)
var embed = new Discord.RichEmbed()
.setTitle(`You are Moved in ${message.guild.name}`)
 .setColor("RANDOM")
.setDescription(`**<@${message.author.id}> Moved You To His Channel!\nServer --> ${message.guild.name}**`)
 message.guild.members.get(usermentioned).setVoiceChannel(authorchannel).then(m => message.channel.send(embed))
message.guild.members.get(usermentioned).send(embed)
} else {
message.channel.send("``ูุง ุชุณุชุทูุน ุณุญุจ "+ message.mentions.members.first() +" `ูุฌุจ ุงู ูููู ูุฐู ุงูุนุถู ูู ุฑูู ุตูุชู`")
}
} else {
 message.channel.send("**``ูุฌุจ ุงู ุชููู ูู ุฑูู ุตูุชู ููู ุชููู ุจุณุญุจ ุงูุนุถู ุฃููู``**")
}
} else {
message.react("โ")
}
 }
});

client.on("message", message => {
	var args = message.content.split(' ').slice(1); 
	var msg = message.content.toLowerCase();
	if( !message.guild ) return;
	if( !msg.startsWith( prefix + 'role' ) ) return;
	if(!message.member.hasPermission('MANAGE_ROLES')) return message.channel.send(' **__ููุณ ูุฏูู ุตูุงุญูุงุช__**');
	if( msg.toLowerCase().startsWith( prefix + 'roler' ) ){
		if( !args[0] ) return message.reply( '**:x: ูุฑุฌู ูุถุน ุงูุดุฎุต ุงููุฑุงุฏ ุณุญุจ ููู ุงูุฑุชุจุฉ**' );
		if( !args[1] ) return message.reply( '**:x: ูุฑุฌู ูุถุน ุงูุฑุชุจุฉ ุงููุฑุงุฏ ุณุญุจูุง ูู ุงูุดุฎุต**' );
		var role = msg.split(' ').slice(2).join(" ").toLowerCase(); 
		var role1 = message.guild.roles.filter( r=>r.name.toLowerCase().indexOf(role)>-1 ).first(); 
		if( !role1 ) return message.reply( '**:x: ูุฑุฌู ูุถุน ุงูุฑุชุจุฉ ุงููุฑุงุฏ ุณุญุจูุง ูู ุงูุดุฎุต**' );if( message.mentions.members.first() ){
			message.mentions.members.first().removeRole( role1 );
			return message.reply('**:white_check_mark: [ '+role1.name+' ] ุฑุชุจุฉ [ '+args[0]+' ] ุชู ุณุญุจ ูู **');
		}
		if( args[0].toLowerCase() == "all" ){
			message.guild.members.forEach(m=>m.removeRole( role1 ))
			return	message.reply('**:white_check_mark: [ '+role1.name+' ] ุชู ุณุญุจ ูู ุงููู ุฑุชุจุฉ**');
		} else if( args[0].toLowerCase() == "bots" ){
			message.guild.members.filter(m=>m.user.bot).forEach(m=>m.removeRole(role1))
			return	message.reply('**:white_check_mark: [ '+role1.name+' ] ุชู ุณุญุจ ูู ุงูุจูุชุงุช ุฑุชุจุฉ**');
		} else if( args[0].toLowerCase() == "humans" ){
			message.guild.members.filter(m=>!m.user.bot).forEach(m=>m.removeRole(role1))
			return	message.reply('**:white_check_mark: [ '+role1.name+' ] ุชู ุณุญุจ ูู ุงูุจุดุฑููู ุฑุชุจุฉ**');
		} 	
	} else {
		if( !args[0] ) return message.reply( '**:x: ูุฑุฌู ูุถุน ุงูุดุฎุต ุงููุฑุงุฏ ุงุนุทุงุฆูุง ุงูุฑุชุจุฉ**' );
		if( !args[1] ) return message.reply( '**:x: ูุฑุฌู ูุถุน ุงูุฑุชุจุฉ ุงููุฑุงุฏ ุงุนุทุงุฆูุง ููุดุฎุต**' );
		var role = msg.split(' ').slice(2).join(" ").toLowerCase(); 
		var role1 = message.guild.roles.filter( r=>r.name.toLowerCase().indexOf(role)>-1 ).first(); 
		if( !role1 ) return message.reply( '**:x: ูุฑุฌู ูุถุน ุงูุฑุชุจุฉ ุงููุฑุงุฏ ุงุนุทุงุฆูุง ููุดุฎุต**' );if( message.mentions.members.first() ){
			message.mentions.members.first().addRole( role1 );
			return message.reply('**:white_check_mark: [ '+role1.name+' ] ุฑุชุจุฉ [ '+args[0]+' ] ุชู ุงุนุทุงุก **');
		}
		if( args[0].toLowerCase() == "all" ){
			message.guild.members.forEach(m=>m.addRole( role1 ))
			return	message.reply('**:white_check_mark: [ '+role1.name+' ] ุชู ุงุนุทุงุก ุงููู ุฑุชุจุฉ**');
		} else if( args[0].toLowerCase() == "bots" ){
			message.guild.members.filter(m=>m.user.bot).forEach(m=>m.addRole(role1))
			return	message.reply('**:white_check_mark: [ '+role1.name+' ] ุชู ุงุนุทุงุก ุงูุจูุชุงุช ุฑุชุจุฉ**');
		} else if( args[0].toLowerCase() == "humans" ){
			message.guild.members.filter(m=>!m.user.bot).forEach(m=>m.addRole(role1))
			return	message.reply('**:white_check_mark: [ '+role1.name+' ] ุชู ุงุนุทุงุก ุงูุจุดุฑููู ุฑุชุจุฉ**');
		} 
	} 
});

client.on('message', message => {
	var prefix = "%";
    if(message.content.startsWith(prefix + 'new')) {
        let args = message.content.split(' ').slice(1).join(' ');
        let support = message.guild.roles.find("name","Support Team");
        let ticketsStation = message.guild.channels.find("name", "tickets");
        if(!args) {
            return message.channel.send('ุงูุฑุฌุงุก ูุชุงุจุฉ ุณุจุจ ุงูุชุฐูุฑุฉ');
        };
                if(!support) {
                    return message.channel.send('**Please make sure that `Support Team` role exists and it\'s not duplicated.**');
                };
            if(!ticketsStation) {
                message.guild.createChannel("Ticket", "category");
            };
                message.guild.createChannel(`๐ป๐ฐ๐ช๐ฒ๐ฌ๐ป`, "text").then(ticket => {
                    message.delete()
                        message.channel.send(`ุชู ุงูุดุงุก ุชุฐูุฑุชู. [ ${ticket} ]`);
                    ticket.setParent(ticketsStation);
                    ticketsStation.setPosition(1);
                        ticket.overwritePermissions(message.guild.id, {
                            SEND_MESSAGES: false,
                            READ_MESSAGES: false
                        });
                            ticket.overwritePermissions(support.id, {
                                SEND_MESSAGES: true,
                                READ_MESSAGES: true
                            });
                                ticket.overwritePermissions(message.author.id, {
                                    SEND_MESSAGES: true,
                                    READ_MESSAGES: true
                                });
                    let embed = new Discord.RichEmbed()
                                .setTitle('**ุชุฐูุฑุฉ ุฌุฏูุฏุฉ.**')
                                .setColor("RANDOM")
                                .setThumbnail(`${message.author.avatarURL}`)
                                .addField('ุณุจุจ ุงูุชุฐูุฑุฉ', args)
                                .addField('ุตุงุญุจ ุงูุชุฐูุฑุฉ', message.author)
                                .addField('ุงูุฑูู', `<#${message.channel.id}>`);

                                ticket.sendEmbed(embed);
                }) .catch();
    }
    if(message.content.startsWith(prefix + 'close')) {
            if(!message.member.hasPermission("ADMINISTRATOR")) return;
        if(!message.channel.name.startsWith("๐ป๐ฐ๐ช๐ฒ๐ฌ๐ป")) {
            return;
        };  
                let embed = new Discord.RichEmbed()
                    .setAuthor("ูู ุชุฑูุฏ ูุนูุข ุงุบูุงู ุงูุชุฐูุฑุฉ ุ.")
                    .setColor("RANDOM");
                    message.channel.sendEmbed(embed) .then(codes => {

                    
                        const filter = msg => msg.content.startsWith(prefix + 'close');
                        message.channel.awaitMessages(response => response.content === prefix + 'close', {
                            max: 1,
                            time: 20000,
                            errors: ['time']
                        })
                        .then((collect) => {
                            message.channel.delete();
                        }) .catch(() => {
                            codes.delete()
                                .then(message.channel.send('**Operation has been cancelled.**')) .then((c) => {
                                    c.delete(4000);
                                })
                                    
                            
                        })


                    })


            
    }
});


client.on('message', message => {
    if (message.content === '#help') {
        let helpEmbed = new Discord.RichEmbed()
        .setTitle('**ุจุฑููุณ ุงูุจูุช(#)**')
        .addField('mc', 'ููู ุงูุฑูู')
        .addField('umc', 'ูุชุญ ุงูุฑูู')
        .addField('server', 'ูุนูููุงุช ุงูุณูุฑูุฑ')
        .addField('%new', 'ุตูุน ุชุฐูุฑู')
	.addField('clear', 'ุญุฐู ุงูุดุงุช')
        .addField('link', 'ุงูุดุงุก ุฑุงุจุท ุฏุนูู')
	.addField('Kick', 'ุงุนุทุงุก ููู')
	.addField('Ban', ' ุงุนุทุงุก ุจุงูุฏ')
	.addField('Mute', 'ุงุนุทุงุก ูููุช')
	.addField('unmute', 'ูู ูููุช')
	.addField('invites', 'ุนุฏุฏ ุงูุฏุนูุงุช')
	.addField('invite-codes', 'ุงุฑุณุงู ุฌููุน ุฑูุงุจุท ุฏุนูุงุชู ุฎุงุต')
	message.channel.send(helpEmbed);
    }
});

client.on('message', message => {
    if (message.content === '#help') {
        let helpEmbed = new Discord.RichEmbed()
	.addField('role', 'ุงุนุทุงุก ุฑุชุจู')
	.addField('roler', 'ุณุญุจ ุฑุชุจู')
	.addField('move', 'ุณุญุจ ุนุถู')  
	.addField('setWelcomer', 'ุชูุนูู ุฑูู ุงูุชุฑุญูุจ')  
	.addField('toggleDmwelcome', 'ุงุฑุณูู ุฑุณุงูุฉ ุชุฑุญูุจ ูู ุงูุฎุงุต (DM)')
	.addField('toggleInvitedby', 'ุชูุนูู ุชู ุชุนุฏูุชู ูู ูุจู')
	.addField('ุชูุฏูู', 'ูู ุงูุชูุฏูู ุนูู ุฑุชุจู ูู ุงูุณูุฑูุฑ')
	.addField('ุฑูุถ', 'ูู ุฑูุถ ุนุถู')
	.addField('ูุจูู', 'ูู ูุจูู ุนุถู')
	.addField('room1', 'ูู ุงูุดุงุก ุฑูู ุงูุชูุฏููุงุช')
	.addField('room2', 'ูู ุงูุดุงุก ุฑูู ุงููุจูู-ุงูุฑูุถ')
	.addField('room2', 'ูู ุงูุดุงุก ุฑูู ุงููุจูู-ุงูุฑูุถ')
	.addField('cc', 'ูุตูุน ุงูุงูุงู')
	message.channel.send(helpEmbed);
    }
});

client.on('message', message => {
    if (message.content === '#help') {
        message.reply("http://admin-bot.epizy.com/?i=1");//Toxic Codes
    }
});

client.on("message", async message => {
            if(!message.channel.guild) return;
        if(message.content.startsWith(prefix + 'invites')) {
        var nul = 0
        var guild = message.guild
        await guild.fetchInvites()
            .then(invites => {
             invites.forEach(invite => {
                if (invite.inviter === message.author) {
                     nul+=invite.uses
                    }
                });
            });
          if (nul > 0) {
              console.log(`\n${message.author.tag} has ${nul} invites in ${guild.name}\n`)
              var embed = new Discord.RichEmbed()
                  .setColor("#000000")
                    .addField(`${message.author.username}`, `ููุฏ ููุช ุจุฏุนูุฉ **${nul}** ุดุฎุต`)
                          message.channel.send({ embed: embed });
                      return;
                    } else {
                       var embed = new Discord.RichEmbed()
                        .setColor("#000000")
                        .addField(`${message.author.username}`, `ูู ุชูู ุจุฏุนูุฉ ุฃู ุดุฎุต ููุฐุฉ ุงูุณูุฑูุฑ`)

                       message.channel.send({ embed: embed });
                        return;
                    }
        }
        if(message.content.startsWith(prefix + 'invite-codes')) {
let guild = message.guild
var codes = [""]
message.channel.send(":postbox: **ููุฏ ููุช ุจุฃุฑุณุงู ุฌููุน ุฑูุงุจุท ุงูุฏุนูุงุช ุงูุชู ููุช ุจุฃูุดุงุฆูุง ูู ุงูุฎุงุต**")
guild.fetchInvites()
.then(invites => {
invites.forEach(invite => {
if (invite.inviter === message.author) {
codes.push(`discord.gg/${invite.code}`)
}
})
}).then(m => {
if (codes.length < 0) {
    var embed = new Discord.RichEmbed()
.setColor("#000000")
.addField(`Your invite codes in ${message.guild.name}`, `You currently don't have any active invites! Please create an invite and start inviting, then you will be able to see your codes here!`)
message.author.send({ embed: embed });
return;
} else {
    var embed = new Discord.RichEmbed()
.setColor("#000000")
.addField(`Your invite codes in ${message.guild.name}`, `Invite Codes:\n${codes.join("\n")}`)
message.author.send({ embed: embed });
return;
}
})
}

});


client.on('message', function(message) {
    let messageArray = message.content.split(" ");
    let args = messageArray[1]
    if(message.content.startsWith(prefix + "cc")) {
         if(isNaN(args[1])) return message.reply(`Sry but its in numbers only no text`);
         if(!message.member.hasPermission("ADMINISTRATOR")) return message.reply('You have no perms.')
        if(!args) return message.reply(`Pick a number`)
      
    let o;
    for(o = 1; o < `${parseInt(args) + 1}`; ++o)
    message.guild.createRole({name: `${o}`, color: "RANDOM"})
    message.reply(`Im making the colors now.`)
}
});

client.on("message", async message => {
        if(!message.channel.guild) return;
 var prefix= "#";
        if(message.content.startsWith(prefix + 'server')) {
        let guild = message.guild
        let channel = message.channel
        let guildicon = guild.icon_url
        let members = guild.memberCount
        let bots = guild.members.filter(m => m.user.bot).size
        let humans = members - bots
        let allchannels = guild.channels.size
        let textchannels = guild.channels.filter(e => e.type === "text")
        let voicechannels = guild.channels.filter(e => e.type === "voice")
          var embed = new Discord.RichEmbed()
          .setColor("#000000")
          .setTitle(`ูุนูููุงุช ุนู ุงูุณูุฑูุฑ`)
          .setDescription(`ูุนูููุงุช ุนู : ${guild.name}`)
          .addField("ุตุงุญุจ ุงูุณูุฑูุฑ :", `${guild.owner}`, true)
          .addField("ุฃูุฏู ุงูุณูุฑูุฑ :", `${guild.id}`, true)
          .addField("ูููุน ุงูุณูุฑูุฑ :", `${guild.region}`, true)
          .addField("ูุณุชูู ุญูุงูุฉ ุงูุณูุฑูุฑ :", `${guild.verificationLevel}`, true)
          .addField("ุนุฏุฏ ุงูุฑููุงุช ุงูุตูุชูุฉ :", `${voicechannels.size}`, true)
          .addField("ุนุฏุฏ ุงูุฑููุงุช ุงููุชุงุจูุฉ :", `${textchannels.size}`, true)
          .addField("ุนุฏุฏ ุงุนุถุงุก ุงูุณูุฑูุฑ :", `${members}`, true)
          .addField("ุนุฏุฏ ุงูุจูุชุงุช :", `${bots}`, true)
          .addField("ุนุฏุฏ ุงูุงุดุฎุงุต :", `${humans}`, true)
          .addField("ุนุฏุฏ ุฑุชุจ ุงูุณูุฑูุฑ :", `${guild.roles.size}`, true)
          .addField(`ุฃูููุฌูุงุช ุงูุฎุงุตุฉ ุจุงูุณูุฑูุฑ : (${guild.emojis.size})`, `- ${guild.emojis.array()}`, true)
          .setFooter(`ุชู ุงูุดุงุก ูุฐู ุงูุณูุฑูุฑ ูู: ${guild.createdAt}`)
 
       message.channel.send({ embed: embed });
 
      }
    });

client.on('message', msg => {
  if (msg.author.bot) return;
  if (!msg.content.startsWith(prefix)) return;
  let command = msg.content.split(" ")[0];
  command = command.slice(prefix.length);
  let args = msg.content.split(" ").slice(1);

    if(command === "clear") {
        const emoji = client.emojis.find("name", "wastebasket")
    let textxt = args.slice(0).join("");
    if(msg.member.hasPermission("MANAGE_MESSAGES")) {
    if (textxt == "") {
        msg.delete().then
    msg.channel.send("***```ุถุน ุนุฏุฏ ุงูุฑุณุงุฆู ุงูุชู ุชุฑูุฏ ูุณุญูุง :ok_hand:```***").then(m => m.delete(3000));
} else {
    msg.delete().then
    msg.delete().then
    msg.channel.bulkDelete(textxt);
        msg.channel.send("```php\nุนุฏุฏ ุงูุฑุณุงุฆู ุงูุชู ุชู ูุณุญูุง: " + textxt + "\n```").then(m => m.delete(3000));
        }    
    }
}
});	
  client.on('message', message => {
    if (message.content.startsWith("#link")) {

  message.channel.createInvite({
        thing: true,
        maxUses: 25,
        maxAge: 86400
    }).then(invite =>
      message.author.sendMessage(invite.url)
    )
  message.channel.send("**ุชู ุงุฑุณุงู ุงูุฑุงุจุท ุจุฑุณุงูุฉ ุฎุงุตุฉ**")

message.author.send(`**ูุฏุฉ ุงูุฑุงุจุท : ูููู
ุฏุฏ ุงุณุชุฎุฏุงูุงุช ุงูุฑุงุจุท : 25**`)

    }
});


client.on('message', message => {

    if (message.content === "#mc") {
                        if(!message.channel.guild) return message.reply(' ูุฐุง ุงูุงูุฑ ููุท ููุณูุฑูุฑุงุช !!');

if(!message.member.hasPermission('MANAGE_MESSAGES')) return message.reply(' ููุณ ูุฏูู ุตูุงุญูุงุช');
           message.channel.overwritePermissions(message.guild.id, {
         SEND_MESSAGES: false

           }).then(() => {
               message.reply("ุชู ุชูููู ุงูุดุงุช ? ")
           });
             }
if (message.content === "#umc") {
    if(!message.channel.guild) return message.reply(' ูุฐุง ุงูุงูุฑ ููุท ููุณูุฑูุฑุงุช !!');

if(!message.member.hasPermission('MANAGE_MESSAGES')) return message.reply('ููุณ ูุฏูู ุตูุงุญูุงุช');
           message.channel.overwritePermissions(message.guild.id, {
         SEND_MESSAGES: true

           }).then(() => {
               message.reply("ุชู ูุชุญ ุงูุดุงุช?")
           });
             }



});

client.on('message', message => {
const prefix = "#";
  if (message.author.kick) return;
  if (!message.content.startsWith(prefix)) return;

  let command = message.content.split(" ")[0];
  command = command.slice(prefix.length);

  let args = message.content.split(" ").slice(1);

  if (command == "kick") {
               if(!message.channel.guild) return;
         
  if(!message.guild.member(message.author).hasPermission("KICK_MEMBERS")) return message.reply("You Don't Have KICK_MEMBERS Permission").then(msg => msg.delete(5000));
  if(!message.guild.member(client.user).hasPermission("KICK_MEMBERS")) return message.reply("I Don't Have KICK_Members Permission");
  let user = message.mentions.users.first();
  let reason = message.content.split(" ").slice(2).join(" ");

  if (message.mentions.users.size < 1) return message.reply("ููุดู ุดุฎุต");
  if(!reason) return message.reply ("ุงูุชุจ ุณุจุจ ุงูุทุฑุฏ");
  if (!message.guild.member(user)
  .bannable) return message.reply("ูุงูููููู ุทุฑุฏ ุดุฎุต ุงุนูู ูู ุฑุชุจุชู");

  message.guild.member(user).kick(7, user);

  const banembed = new Discord.RichEmbed()
  .setAuthor('Kicked !', user.displayAvatarURL)
  .setColor("RANDOM")
  .setTimestamp()
  .addField("User:",  `[ + ${user.tag} + ]`)
  .addField("By:", `[  + ${message.author.tag} +  ]`)
  .addField("Reason:", `[ + ${reason} +  ]`)
 client.channels.get("516624277856976920","516609200248455173").send({embed : banembed})
  }
});

  client.on('message', message => {
  if (message.author.codes) return;
  if (!message.content.startsWith(prefix)) return;

  let command = message.content.split(" ")[0];
  command = command.slice(prefix.length);

  let args = message.content.split(" ").slice(1);

  if (command == "ban") {
               if(!message.channel.guild) return message.reply('** This command only for servers**');
         
  if(!message.guild.member(message.author).hasPermission("BAN_MEMBERS")) return message.reply("**ุงูุช ูุง ุชููู ุงูุตูุงุญูุงุช ุงููุทููุจู**");
  if(!message.guild.member(client.user).hasPermission("BAN_MEMBERS")) return message.reply("**I Don't Have ` BAN_MEMBERS ` Permission**");
  let user = message.mentions.users.first();
  
  if (message.mentions.users.size < 1) return message.reply("**ููุดู ุดุฎุต**");
  if (!message.guild.member(user)
  .bannable) return message.reply("**ูุฌุจ ุงู ุชููู ุฑุชุจุฉ ุงูุจูุช ุงุนูู ูู ุฑุชุจู ุงูุดุฎุต ุงููุฑุงุฏ ุชุจููุฏุฉ**");


  message.guild.member(user).ban(7, user);

message.channel.send(`**baneed from this server**`)

}
});

client.on('message', async message => {
  let args = message.content.split(" ");
  if(message.content.startsWith(prefix + "mute")) {
    if(!message.member.hasPermission("MUTE_MEMBERS")) return message.channel.send('').then(msg => {
      msg.delete(3500);
      message.delete(3500);
    });
 
    if(!message.guild.member(client.user).hasPermission("MUTE_MEMBERS")) return message.channel.send('').then(msg => {
      msg.delete(3500);
      message.delete(3500);
    });
 
    let mention = message.mentions.members.first();//kinggamer ุญููู ุงููุง ููุฏุฒ ู
    if(!mention) return  message.channel.send('').then(msg => { //kinggamer ุญููู ุงููุง ููุฏุฒ ู
      msg.delete(3500);
      message.delete(3500);
    });
 
    if(mention.id === message.author.id) return message.channel.send('**:x:You Cannot give mute to your self**').then(msg => {
      msg.delete(3500);
      message.delete(3500); //kinggamer ุญููู ุงููุง ููุฏุฒ ู
    });
   
    if(mention.hasPermission('ADMINISTRATOR')) return message.channel.send(`**:x: ูุง ูููู ุขุนุทุงุก ูููุช ูุงุฏุงุฑุฉ ุงูุณูุฑูุฑ**`); //kinggamer ุญููู ุงููุง ููุฏุฒ ู
 
    if(message.guild.member(mention).roles.find('name', 'Muted')) return message.channel.send(`**:information_source: ${mention.user.username} Already Muted**`);
 
   
    if(mention.position >= message.guild.member(message.author).positon) return message.channel.send('You Donot Have Permission **Muted_Members** ').then(msg => {
      msg.delete(3500);
      message.delete(3500);
    });
   
    if(mention.positon >= message.guild.member(client.user).positon) return message.channel.send('I Donot Have Permission **Muted_Members**').then(msg => {
      msg.delete(3500);
      message.delete(3500); //kinggamer ุญููู ุงููุง ููุฏุฒ ู
    });
   
    let duration = args[2];
    if(!duration) message.channel.send(`**:hash: You Can Use ${prefix}mute @user Time Reason**`).then(msg => {
      msg.delete(3500);
      message.delete(3500);
    });
 
    if(isNaN(duration))  message.channel.send('').then(msg => {
      msg.delete(3500);
      message.delete(3500);
    });
 
    let reason = message.content.split(" ").slice(3).join(" ");
    if(!reason) reason = " [ **ูู ูุฐูุฑ ููุงุฐุง** ] ";
 
    let thisEmbed = new Discord.RichEmbed()
    .setAuthor(mention.user.username, mention.user.avatarURL)
    .setTitle('**ุชู ุขุนุทุงุฆู ูููุช**')
    .addField('**__ุงูุณูุฑูุฑ__**',[ message.guild.name ]) //kinggamer ุญููู ุงููุง ููุฏุฒ ู
    .addField('**__ุชู ุขุนุทุงุฆู ูููุช ุจูุงุณุทุฉ__**', [ message.author ])
    .addField('**__ุขูุณุจุจ__**',reason)
    .addField('**__ููุช ุงููููุช__**',duration)
 
    let role = message.guild.roles.find('name', 'Muted') || message.guild.roles.get(r => r.name === 'Muted');
    if(!role) try {
      message.guild.createRole({
        name: "Muted",
        permissions: 0 //kinggamer ุญููู ุงููุง ููุฏุฒ ู
      }).then(r => {
        message.guild.channels.forEach(c => {
          c.overwritePermissions(r , {
            SEND_MESSAGES: false, //kinggamer ุญููู ุงููุง ููุฏุฒ ู
            READ_MESSAGES_HISTORY: false,
            ADD_REACTIONS: false
          });
        });
      }); //kinggamer ุญููู ุงููุง ููุฏุฒ ู
    } catch(e) {
      console.log(e.stack);
    }
    mention.addRole(role).then(() => {
      mention.send(thisEmbed);
      message.channel.send(`**:white_check_mark: ${mention.user.username}  Muted! :zipper_mouth:  **  `);
      mention.setMute(true); //kinggamer ุญููู ุงููุง ููุฏุฒ ู
    });
    setTimeout(() => {
      if(duration === 0) return;
      mention.setMute(false);
      mention.removeRole(role)
    },duration * 60000); //kinggamer ุญููู ุงููุง ููุฏุฒ ู
  }
});
client.on('message', async message => {
    let mention = message.mentions.members.first();
let command = message.content.split(" ")[0];
     command = command.slice(prefix.length);
    let args = message.content.split(" ").slice(1);  //kinggamer ุญููู ุงููุง ููุฏุฒ ู
if(command === `unmute`) {2
  if(!message.member.hasPermission("MUTE_MEMBERS")) return message.channel.sendMessage("**You Donot HavePermission Mute_Members**").then(m => m.delete(5000));
if(!message.guild.member(client.user).hasPermission("MUTE_MEMBERS")) return message.reply("**I donot Have Permission Mute_Members**").then(msg => msg.delete(6000))
 
  let kinggamer = message.guild.member(message.mentions.users.first()) || message.guild.members.get(args[0]);
     if(!kinggamer) return message.channel.send('').then(msg => {
      msg.delete(3500);
      message.delete(3500); //kinggamer ุญููู ุงููุง ููุฏุฒ ู
    });
 
  let role = message.guild.roles.find (r => r.name === "Muted");
 
  if(!role || !kinggamer.roles.has(role.id)) return message.channel.sendMessage(`**:information_source:${mention.user.username} ููุฏ ุชู ูู ุงููููุช ุนูู ูุณุจูุง**`)
 
  await kinggamer.removeRole(role) //kinggamer ุญููู ุงููุง ููุฏุฒ ู
  message.channel.sendMessage(`**:white_check_mark: ${mention.user.username}  Unmuted! **`);
 
  return;
 
  }
 
});



const welcome = JSON.parse(fs.readFileSync('./welcomer.json' , 'utf8'));


client.on('message', message => {

           if (!message.channel.guild) return;

    let room = message.content.split(" ").slice(1);
    let findroom = message.guild.channels.find('name', `${room}`)
    if(message.content.startsWith(prefix + "setWelcomer")) {
        if(!message.channel.guild) return message.reply('**This Command Only For Servers**');
        if(!message.member.hasPermission('MANAGE_GUILD')) return message.channel.send('**Sorry But You Dont Have Permission** `MANAGE_GUILD`' );
if(!room) return message.channel.send('Please Type The Channel Name')
if(!findroom) return message.channel.send('Cant Find This Channel')
let embed = new Discord.RichEmbed()
.setTitle('**Done The Welcome Code Has Been Setup**')
.addField('Channel:', `${room}`)
.addField('Requested By:', `${message.author}`)
.setThumbnail(message.author.avatarURL)
.setFooter(`${client.user.username}`)
message.channel.sendEmbed(embed)
welcome[message.guild.id] = {
channel: room,
onoff: 'On',
by: 'On',
dm: 'Off'
}
fs.writeFile("./welcomer.json", JSON.stringify(welcome), (err) => {
if (err) console.error(err)
})
    }})

        client.on('message', message => {
  
    if(message.content.startsWith(prefix + "toggleDmwelcome")) {
        if(!message.channel.guild) return message.reply('**This Command Only For Servers**');
        if(!message.member.hasPermission('MANAGE_GUILD')) return message.channel.send('**Sorry But You Dont Have Permission** `MANAGE_GUILD`' );
        if(!welcome[message.guild.id]) welcome[message.guild.id] = {
          dm: 'Off'
        }
          if(welcome[message.guild.id].dm === 'Off') return [message.channel.send(`**The Welcome Dm Is __๐๐__ !**`), welcome[message.guild.id].dm = 'On']
          if(welcome[message.guild.id].dm === 'On') return [message.channel.send(`**The Welcome Dm Is __๐๐๐__ !**`), welcome[message.guild.id].dm = 'Off']
          fs.writeFile("./welcome.json", JSON.stringify(welcome), (err) => {
            if (err) console.error(err)
            .catch(err => {
              console.error(err);
          });
            })
          }
          
        })

        client.on('message', message => {
  
            if(message.content.startsWith(prefix + "toggleInvitedby")) {
                if(!message.channel.guild) return message.reply('**This Command Only For Servers**');
                if(!message.member.hasPermission('MANAGE_GUILD')) return message.channel.send('**Sorry But You Dont Have Permission** `MANAGE_GUILD`' );
                if(!welcome[message.guild.id]) welcome[message.guild.id] = {
                  by: 'Off'
                }
                  if(welcome[message.guild.id].by === 'Off') return [message.channel.send(`**The Invited By Is __๐๐__ !**`), welcome[message.guild.id].by = 'On']
                  if(welcome[message.guild.id].by === 'On') return [message.channel.send(`**The Invited By Is __๐๐๐__ !**`), welcome[message.guild.id].by = 'Off']
                  fs.writeFile("./welcome.json", JSON.stringify(welcome), (err) => {
                    if (err) console.error(err)
                    .catch(err => {
                      console.error(err);
                  });
                    })
                  }
                  
                })
                

client.on("guildMemberAdd", member => {
            if(!welcome[member.guild.id]) welcome[member.guild.id] = {
          onoff: 'Off'
        }
        if(welcome[member.guild.id].onoff === 'Off') return;
    let welcomer = member.guild.channels.find('name', `${welcome[member.guild.id].channel}`)
    let memberavatar = member.user.avatarURL
      if (!welcomer) return;
      if(welcomer) {
         moment.locale('ar-ly');
         var h = member.user;
        let heroo = new Discord.RichEmbed()
        .setColor('RANDOM')
        .setThumbnail(h.avatarURL)
        .setAuthor(h.username,h.avatarURL)
        .addField(': ุชุงุฑูุฎ ุฏุฎููู ุงูุฏุณููุฑุฏ',`${moment(member.user.createdAt).format('D/M/YYYY h:mm a')} **\n** \`${moment(member.user.createdAt).fromNow()}\``,true)
         .setFooter(`${h.tag}`,"https://images-ext-2.discordapp.net/external/JpyzxW2wMRG2874gSTdNTpC_q9AHl8x8V4SMmtRtlVk/https/orcid.org/sites/default/files/files/ID_symbol_B-W_128x128.gif")
     welcomer.send({embed:heroo});
      }})


client.on('guildMemberAdd',async member => {
            if(!welcome[member.guild.id]) welcome[member.guild.id] = {
          onoff: 'Off'
        }
    if(welcome[member.guild.id].onoff === 'Off') return;
    const Canvas = require('canvas');
    const jimp = require('jimp');
    const w = ['./welcome_4.png'];
          let Image = Canvas.Image,
              canvas = new Canvas(800, 300),
              ctx = canvas.getContext('2d');
          ctx.patternQuality = 'bilinear';
          ctx.filter = 'bilinear';
          ctx.antialias = 'subpixel';
          ctx.shadowColor = 'rgba(0, 0, 0, 0.4)';
          ctx.shadowOffsetY = 2;
          ctx.shadowBlur = 2;
          ctx.stroke();
          ctx.beginPath();
   
          fs.readFile(`${w[Math.floor(Math.random() * w.length)]}`, function (err, Background) {
              if (err) return console.log(err);
              let BG = Canvas.Image;
              let ground = new Image;
              ground.src = Background;
              ctx.drawImage(ground, 0, 0, 800, 300);
   
  })
   
                  let url = member.user.displayAvatarURL.endsWith(".webp") ? member.user.displayAvatarURL.slice(5, -20) + ".png" : member.user.displayAvatarURL;
                  jimp.read(url, (err, ava) => {
                      if (err) return console.log(err);
                      ava.getBuffer(jimp.MIME_PNG, (err, buf) => {
                   if (err) return console.log(err);
   
            ctx.font = '36px Arial';
            ctx.fontSize = '72px';
            ctx.fillStyle = "#ffffff";
            ctx.textAlign = "center";
            ctx.fillText(member.user.username, 545, 177);
           
            ctx.font = '16px Arial Bold';
            ctx.fontSize = '72px';
            ctx.fillStyle = "#ffffff";
            ctx.textAlign = "center";
            ctx.fillText(`${member.guild.memberCount} Members`, 580, 200);
           
            let Avatar = Canvas.Image;
            let ava = new Avatar;
            ava.src = buf;
            ctx.beginPath();
            ctx.arc(169.5, 148, 126.9, -100, Math.PI * 2, true);
            ctx.closePath();
            ctx.clip();
            ctx.drawImage(ava, 36, 21, 260, 260);
             
            let c = member.guild.channels.find('name', `${welcome[member.guild.id].channel}`)
            if(!c) return;
            c.sendFile(canvas.toBuffer());
   
  });
  });
  });

  const invites = {};

const wait = require('util').promisify(setTimeout);

client.on('ready', () => {
  wait(1000);

  client.guilds.forEach(g => {
    g.fetchInvites().then(guildInvites => {
      invites[g.id] = guildInvites;
    });
  });
});

client.on('guildMemberAdd', member => {
                    if(!welcome[member.guild.id]) welcome[member.guild.id] = {
                  by: 'Off'
                }
    if(welcome[member.guild.id].by === 'Off') return;
  member.guild.fetchInvites().then(guildInvites => {
    const ei = invites[member.guild.id];
    invites[member.guild.id] = guildInvites;
    const invite = guildInvites.find(i => ei.get(i.code).uses < i.uses);
    const inviter = client.users.get(invite.inviter.id);
    const logChannel = member.guild.channels.find(channel => channel.name === `${welcome[member.guild.id].channel}`);
    if(!logChannel) return;
      setTimeout(() => {
    logChannel.send(`Invited By: <@${inviter.id}>`);
  },2000)
  });
});

client.on("guildMemberAdd", member => {
                    if(!welcome[member.guild.id]) welcome[member.guild.id] = {
                  dm: 'Off'
                }
        if(welcome[member.guild.id].dm === 'Off') return;
  member.createDM().then(function (channel) {
  return channel.send(`:rose:  ูููู ููุฑุช ุงูุณูุฑูุฑ:rose: 
:crown:ุงุณู ุงูุนุถู  ${member}:crown:  
ุงูุช ุงูุนุถู ุฑูู ${member.guild.memberCount} `) 
}).catch(console.error)
});


client.login(process.env.BOT_TOKEN);// ูุง ุชุบูุฑ ูููุง ุดูุก
